x[-c(2,10)]
vect<-c(foo=11.bar=2,norf=NA)
vect<-c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2<-c(11,2,NA)
names(vect2)<-c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
myVector<-1:20
myVector
dim(myVector)
length(myVector)
dim(myVector)<-c(4,5)
dim(myVector)
attributes(myVector)
myVector
class(myVector)
myMatrix<-myVector
?matrix
myMatrix2<-matrix(data=1:20,nrow=4,ncol=5)
identical(myMatrix,myMatrix2)
patients<-c("Bill","Gina","Kelly","Sean")
cbind(patients,myMatrix)
myData<-data.frame(patients,myMatrix)
myData
class(myData)
cnames<-c("patients","age","weight","bp","rating","test")
cnames<-c("patient","age","weight","bp","rating","test")
colnames(cnames,myData)
?cnames
colnames(myData)<-cnames
myData
cub<-function(x,n){
x^3
}
cube(3)
cub(3)
x<-1:10
if(x>5){
x<-0)
if(x>5){
x<-0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z<-10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
?cbind
q()
install.packages("KernSmooth R")
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
utils:::menuInstallPkgs()
copyright
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
q()
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(file.url,destfile="./data/week3.csv")
download.file(fileUrl,destfile="./data/week3.csv")
?download.file
cd
getwd
dir
dir .
dir(patch=".")
dir(path=".")
homework<-read.csv("getdata-data-ss06hid.csv"
)
head(homework)
x<-as.logical(homework$ACR=3&homework$AGS=6)
?as.logical
x<-homehomework$ACR=3&homework$AGS=6
x<-homework[homework$ACR=3&homework$AGS=6]
x<-homework["homework$ACR=3"&"homework$AGS=6"]
x<-homework[homework$ACR="3"&homework$AGS="6"]
x<-homework[homework$ACR %in% 3 & homework$AGS %in% 6]
x<-homework[homework$ACR%in%3 & homework$AGS%in%6]
head(homework,2)
x=homework$ACR %in% "3" & homework$AGS %in% "6"
x
homework$agri=x
homework
homework[which(homework$agri="TRUE",]
homework[which(homework$agri %in% "TRUE",]
homework[which(homework$agri %in% "TRUE"),]
library(jpeg)
utils:::menuInstallPkgs()
utils:::menuInstallPkgs()
setRepositories()
utils:::menuInstallPkgs()
setRepositories()
utils:::menuInstallPkgs()
utils:::menuInstallPkgs()
readJPEG("getdata-jeff.jpg",native=TRUE)
library(jpeg)
readJPEG("getdata-jeff.jpg",native=TRUE)
x<-readJPEG("getdata-jeff.jpg",native=TRUE)
head(x,2)
x[c(30,80),]
x[,c(30,80)]
x[30,80)
x[30,80]
quantile(x[,1],probs=c(0.3,0.8))
quantile(x[,2],probs=c(0.3,0.8))
quantile(x,probs=c(0.3,0.8))
a<-read.csv("getdata-data-GDP.csv"
)
head(a,3)
b<-read.csv("getdata-data-GDP.csv")
head(b,2)
b<-read.csv("getdata-data-EDSTATS_Country.csv")
head(b,2)
a
names(a)
names(b)
?match
match(CountryCode,b)
match(a,b)
head(a)
summary(a)
str(a)
a<-read.csv("getdata-data-GDP.csv")
head(a,2)
head(b,3)
match(a$1,b$CountryCode)
str(a)
match(a$x,b$CountryCode)
match(a$X,b$CountryCode)
match<-match(amatch(a$X,b$CountryCode)
)
match<-match(a$X,b$CountryCode)
match(is.na="FALSE")
match[is.na=FALSE"]
0
)
]
match
?sort
b$other<-match
B$other<-match(a$X,b$CountryCode)
b$other<-match(a$X,b$CountryCode)
a$other<-match(a$X,b$CountryCode)
head(a)
sort(a,decreasing=TRUE)
sort(a$Ranking,decreasing=TRUE)
c<-sort(a$Ranking,decreasing=TRUE)
head(c)
head(a,2)
c=merge(a,b,by.x="x",by.y="CountryCode",all=TRUE)
c=merge(a,b,by.x="X",by.y="CountryCode",all=TRUE)
head(c,3)
c
wirte.csv("abc.csv")
?write.csv
write.csv(c,file="abc.csv")
q()
trainData <- read.table("./data/train/X_train.txt")
dim(trainData) # 7352*561
head(trainData)
trainLabel <- read.table("./data/train/y_train.txt")
table(trainLabel)
trainSubject <- read.table("./data/train/subject_train.txt")
testData <- read.table("./data/test/X_test.txt")
dim(testData) # 2947*561
testLabel <- read.table("./data/test/y_test.txt")
table(testLabel)
testSubject <- read.table("./data/test/subject_test.txt")
joinData <- rbind(trainData, testData)
dim(joinData) # 10299*561
joinLabel <- rbind(trainLabel, testLabel)
dim(joinLabel) # 10299*1
joinSubject <- rbind(trainSubject, testSubject)
dim(joinSubject) # 10299*1
# Step2. Extracts only the measurements on the mean and standard
# deviation for each measurement.
features <- read.table("./data/features.txt")
dim(features)  # 561*2
meanStdIndices <- grep("mean\\(\\)|std\\(\\)", features[, 2])
length(meanStdIndices) # 66
joinData <- joinData[, meanStdIndices]
dim(joinData) # 10299*66
names(joinData) <- gsub("\\(\\)", "", features[meanStdIndices, 2]) # remove "()"
names(joinData) <- gsub("mean", "Mean", names(joinData)) # capitalize M
names(joinData) <- gsub("std", "Std", names(joinData)) # capitalize S
names(joinData) <- gsub("-", "", names(joinData)) # remove "-" in column names
# Step3. Uses descriptive activity names to name the activities in
# the data set
activity <- read.table("./data/activity_labels.txt")
activity[, 2] <- tolower(gsub("_", "", activity[, 2]))
substr(activity[2, 2], 8, 8) <- toupper(substr(activity[2, 2], 8, 8))
substr(activity[3, 2], 8, 8) <- toupper(substr(activity[3, 2], 8, 8))
activityLabel <- activity[joinLabel[, 1], 2]
joinLabel[, 1] <- activityLabel
names(joinLabel) <- "activity"
# Step4. Appropriately labels the data set with descriptive activity
# names.
names(joinSubject) <- "subject"
cleanedData <- cbind(joinSubject, joinLabel, joinData)
dim(cleanedData) # 10299*68
write.table(cleanedData, "merged_data.txt") # write out the 1st dataset
# Step5. Creates a second, independent tidy data set with the average of
# each variable for each activity and each subject.
subjectLen <- length(table(joinSubject)) # 30
activityLen <- dim(activity)[1] # 6
columnLen <- dim(cleanedData)[2]
result <- matrix(NA, nrow=subjectLen*activityLen, ncol=columnLen)
result <- as.data.frame(result)
colnames(result) <- colnames(cleanedData)
row <- 1
for(i in 1:subjectLen) {
for(j in 1:activityLen) {
result[row, 1] <- sort(unique(joinSubject)[, 1])[i]
result[row, 2] <- activity[j, 2]
bool1 <- i == cleanedData$subject
bool2 <- activity[j, 2] == cleanedData$activity
result[row, 3:columnLen] <- colMeans(cleanedData[bool1&bool2, 3:columnLen])
row <- row + 1
}
}
head(result)
write.table(result, "data_with_means.txt") # write out the 2nd dataset
# data <- read.table("./data_with_means.txt")
# data[1:12, 1:3]
trainData <- read.table("./data/train/X_train.txt")
dir
list
list.
list./
.
list..
?list
getwd()
source("C:\\Users\\asus\\week3data\\run_analysis.R")
q()
q()
q()
library(nlme)
library(lattice)
xyplot(weight~Time |Diet, Bodyweight)
xyplot(weight~Time |Diet, BodyWeight)
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
print(p)
?print.trellis
?par
?trellis.par.set
library(datasets)
data(airquality)
library(ggplot2)
utils:::menuInstallPkgs()
?lattice
q()
library(datasets)
data(airquality)
fit<-lm(Ozome~Wind +Temp + Solar.R, data=airquality)
```{r showtalbe}
install.packages("xtable")
setwd("C:/Users/asus/homework/RepData_PeerAssessment1")
Assignment
========================================================
```{r setoptions, echo=TRUE}
opts_chunk$set(echo=TRUE)
```
## Loading and preprocessing the data
```{r readandclean}
Sys.setlocale(category = "LC_TIME", locale = "C")
rawdata<-read.csv("activity.csv", head=TRUE, na.strings="NA")
rawdata$date2<-as.Date(rawdata$date, format="%Y-%m-%d")
```
## What is mean total number of steps taken per day?
```{r plot histogram}
rawdata$date3<-as.factor(rawdata$date2)
datagraph<-tapply(rawdata$steps,rawdata$date3,sum)
hist(datagraph)
datagraph2<-data.matrix(datagraph)
mean(datagraph2[,1],na.rm =TRUE)
median(datagraph2[,1],na.rm =TRUE)
```
head(rawdata,3)
View(myData)
with(rawdata, plot(interval,steps))
rawdata$interval2<-as.factor(rawdata$interval)
datainterval<-tapply(rawdata$steps,rawdata$internal2,mean)
head(datagraph2)
rawdata$interval2<-as.factor(rawdata$interval)
datagraphi<-tapply(rawdata$steps,rawdata$interval2,mean)
datagraphi2<-data.matrix(datagraphi)
head(datagraphi2)
col.names(datagraphi2)<-c(Steps,Interval)
col.names(datagraphi2)<-c("Steps","Interval")
colnames(datagraphi2)<-c("Steps","Interval")
rawdata$interval2<-as.factor(rawdata$interval)
datagraphi<-tapply(rawdata$steps,rawdata$interval2,mean)
str(datagraphi)
head(datagraphi)
rawdata$date3<-as.factor(rawdata$date2)
datagraph<-tapply(rawdata$steps,rawdata$date3,sum)
datagraph2<-data.matrix(datagraph)
hist(datagraph)
mean(datagraph2[,1],na.rm =TRUE)
median(datagraph2[,1],na.rm =TRUE)
rawdata$date3<-as.factor(rawdata$date2)
datagraph<-tapply(rawdata$steps,rawdata$date3,sum)
datagraph2<-data.matrix(datagraph)
hist(datagraph2)
rawdata$date3<-as.factor(rawdata$date2)
datagraph<-tapply(rawdata$steps,rawdata$date3,sum)
datagraph2<-data.matrix(datagraph)
hist(datagraph2)
rawdata$date3<-as.factor(rawdata$date2)
datagraph<-tapply(rawdata$steps,rawdata$date3,sum)
datagraph2<-data.matrix(datagraph)
hist(datagraph2,xlab = "steps taken each day")
rawdata$date3<-as.factor(rawdata$date2)
datagraph<-tapply(rawdata$steps,rawdata$date3,sum)
datagraph2<-data.matrix(datagraph)
hist(datagraph2,xlab = "steps taken each day", main="histogram")
rawdata$interval2<-as.factor(rawdata$interval)
datagraphi<-tapply(rawdata$steps,rawdata$interval2,mean)
datagraphi2<-data.matrix(datagraphi)
colnames(datagraphi2)<-c("Steps","Interval")
name(datagraphi2)
?name
rawdata$interval2<-as.factor(rawdata$interval)
datagraphi<-tapply(rawdata$steps,rawdata$interval2,mean, simplify="TRUE")
datagraphi<-tapply(rawdata$steps,rawdata$interval2, mean, simplify="TRUE")
datagraphi
head(rawdata)
rawdata$interval2<-as.factor(rawdata$interval)
datagraphi<-tapply(rawdata$steps,rawdata$interval2, mean, na.rm = TRUE)
head(datagraphi)
str(datagraphi)
datagraphi2<-data.matrix(datagraphi)
str(datagraphi2)
summary(datagraphi)
plot(datagraphi)
rawdata$interval2<-as.factor(rawdata$interval)
datagraphi<-tapply(rawdata$steps,rawdata$interval2, mean, na.rm = FALSE)
plot(datagraphi)
rawdata$interval2<-as.factor(rawdata$interval)
datagraphi<-tapply(rawdata$steps,rawdata$interval2, mean, na.rm =TRUE)
plot(datagraphi)
head(rawdata)
rawdata$time <- strptime(paste(rawdata$date, sapply(rawdata$interval, formatC, width = 4, flag = 0)), format = "%Y-%m-%d %H %M")
rawdata$time <- strptime(paste(rawdata$date, sapply(rawdata$interval, formatC, width = 4, flag = 0)), format = "%Y-%m-%d %H %M")
head(rawdata)
plot(rawdata)
?plot
with(rawdata, plot(time, steps))
library(reshape2)
install.packages("reshape2")
install.packages("reshape2")
library("reshape2", lib.loc="D:/R-3.1.0/library")
?cast
head(rawdata)
datagraphi<-dcast(rawdata, date2~variable, mean)
datagraphi<-melt(rawdata,id=c("interval", date"), measure.vars="steps", na.rm=TRUE)
datagraphi<-melt(rawdata,id=c("interval", date"), measure.vars=c("steps"), na.rm=TRUE)
datagraphi<-melt(rawdata,id=c("interval", date"), value.name="steps", na.rm=TRUE)
datagraphi<-melt(rawdata,id=c("interval", date"),na.rm=TRUE, value.name="steps")
datagraphi<-melt(rawdata,id.vars=c("interval", date"),measure.vars="steps", na.rm=TRUE)
head(rawdat)
head(rawdata)
datagraphi<-melt(rawdata, id.vars=c("interval", "date"),measure.vars="steps", na.rm=TRUE)
datagraphi<-melt(rawdata, id.vars=c("interval", "date2"),measure.vars="steps", na.rm=TRUE)
datagraphi<-melt(rawdata, id.vars=c("time", "date2"),measure.vars="steps", na.rm=TRUE)
datagraphi<-melt(rawdata, id=c("interval", "date2"),measure.vars="steps", na.rm=TRUE)
datagraphi<-melt(rawdata, id="date2",measure.vars="steps", na.rm=TRUE)
datagraphi<-melt(rawdata, id=c("interval","date2"), measure.vars="steps", na.rm=TRUE)
datagraphi1<-melt(rawdata, id=c("interval","date2"), measure.vars="steps", na.rm=TRUE)
str(rawdata)
datagraphi1<-melt(rawdata, id=c("time","interval","date2"), measure.vars="steps", na.rm=TRUE)
rawdata$time2<-as.character(rawdata$time)
datagraphi1<-melt(rawdata, id=c("rawdata$time2","interval","date2"), measure.vars="steps", na.rm=TRUE)
datagraphi1<-melt(rawdata, id=c("time2","interval","date2"), measure.vars="steps", na.rm=TRUE)
head(rawdata)
datagraph<-tapply(steps, date2, sum)
datagraph<-tapply(rawdata$steps, rawdata$date2, sum)
rawdata$time2<-as.character(rawdata$time)
head(rawdata)
datagraphi1<-melt(rawdata, id=c("time2","interval","date2"), measure.vars="steps", na.rm=TRUE)
datagraphi1<-melt(rawdata, id=c("interval","date2"), measure.vars="steps", na.rm=TRUE)
datagraphi<-rawdata[,c("steps","date2","interval")]
datagraphi1<-melt(datagraphi, id=c("interval","date2"), measure.vars="steps", na.rm=TRUE)
datagraphi2<-dcast(datagraphi1, date2~variable, mean)
head(datagraphi2)
datagraphi2<-dcast(datagraphi1, interval~variable, mean)
datagraphi2<-dcast(datagraphi1, interval~variable, mean)
head(datagraphi2)
with(datagraphi2, plot(interval, steps))
with(datagraphi2, plot(interval, steps), type="l")
with(datagraphi2, plot(interval, steps), type="l")
with(datagraphi2, plot(interval, steps), type="1")
with(datagraphi2, plot(interval, steps), lty="1")
with(datagraphi2, plot(interval, steps, lty="1"))
with(datagraphi2, plot(interval, steps, pch=1))
datagraphi2[max(steps),]
datagraphi2[,max(steps)]
a<-max(datagraphi2$steps)
a
datagraphi2[,a]
datagraphi2[,==a]
datagraphi2[,datagraphi2$steps==a]
datagraphi2[,(datagraphi2$steps==a)]
datagraphi2[,(==a)]
datagraphi2[,a]
rawdata$weekdays<-weekdays(rawdata$time)
head(rawdata,3)
rawdata$weektime <- as.factor(ifelse(weekdays(rawdata$time) %in% c("Saturday","Sunday"),"weekend", "weekday"))
head(rawdata,3)
install.packages("ggplot2")
library(ggplot2)
head(raw,data)
head(rawdata)
qplot(interval, steps, data=rawdata, facets=weektime~.)
datagraphw<-rawdata[,c("steps","date2","interval", "weektime")]
datagraphw1<-melt(datagraphw, id=c("interval","date2"), measure.vars="steps", na.rm=TRUE)
datagraphw2<-dcast(datagraphw1, interval~variable, mean)
head(datagraphw2)
datagraphw<-rawdata[,c("steps","date2","interval", "weektime")]
datagraphw1<-melt(datagraphw, id=c("interval","date2", "weektime"), measure.vars="steps", na.rm=TRUE)
datagraphw2<-dcast(datagraphw1, interval~variable, mean)
head(datagraphw2)
head(datagraphw1)
summary(datagraphw1)
split<-split(datagraphw, datagraphw$weektime)
head(split)
str(split)
datagraphw1<-melt(split[1], id=c("interval", "weektime"), measure.vars="steps", na.rm=TRUE)
head(datagraphw1)
summary(datagraphw1)
datagraphw2<-dcast(datagraphw1, interval~variable, mean)
summary(datagraphw2)
qplot(interval, steps, data=datagraphw2)
datagraphw<-rawdata[,c("steps","date2","interval", "weektime")]
head(datagraphw)
x<-datagraphw[, mean(steps), by="interval,PartOfWeek"]
x<-datagraphw[, mean(steps), by="interval,weektime"]
x<-datagraphw[, mean(steps), by="interval" & "weektime"]
x<-datagraphw[, mean(steps), by=c("interval","weektime")]
datagraphw<-as.table(rawdata[,c("steps","date2","interval", "weektime")])
y<-as.table(datagraphw)
split<-split(datagraphw, datagraphw$weektime)
datagraphw1<-melt(split, id=c("interval", "weektime"), measure.vars="steps", na.rm=TRUE)
datagraphw2<-dcast(datagraphw1, interval~variable, mean)
head(datagraphw1)
summary(datagraphw1)
head(datagraphw2)
summary(datagraphw2)
datagraphw<-rawdata[,c("steps","interval", "weektime")]
datagraphw1<-melt(datagraphw, id=c("interval", "weektime"), measure.vars="steps", na.rm=TRUE)
datagraphw2<-dcast(datagraphw1, interval~variable, mean, subset = .(variable=="weektime"))
datagraphw2<-acast(datagraphw1, interval~variable, mean, subset = .(variable=="weektime"))
datagraphw2<-acast(datagraphw1, interval~variable, mean, subset = .(weektime=="weekday"))
datagraphw2<-acast(datagraphw1, interval~variable, mean, subset = .(weektime=="weekday"))
datagraphw2<-acast(datagraphw1, interval~variable, mean, subset =.(weektime=="weekday"))
datagraphw2<-acast(datagraphw1, interval~variable, mean, subset = .(weektime=="weekday"))
datagraphw2<-acast(datagraphw1, interval~variable, mean, subset = .(variable=="weektime"))
datagraphw2<-acast(datagraphw1, interval~variable, mean, subset =(variable=="weektime"))
datagraphw2<-acast(datagraphw1, interval~variable, mean, subset =(weektime=="weekend"))
datagraphw<-rawdata[,c("steps","interval", "weektime")]
split<-split(datagraphw, datagraphw$weektime)
datagraphw1<-melt(split[1], id=c("interval", "weektime"), measure.vars="steps", na.rm=TRUE)
datagraphw2<-acast(datagraphw1, interval~variable, mean))
qplot(interval, steps, data=datagraphw2)
detach("package:ggplot2", unload=TRUE)
split<-split(datagraphw, datagraphw$weektime)
datagraphw1<-melt(split[1], id=c("interval", "weektime"), measure.vars="steps", na.rm=TRUE)
datagraphw2<-acast(datagraphw1, interval~variable, mean))
with(datagraphw2, plot(interval, steps, pch=1)
datagraphw<-rawdata[,c("steps","interval", "weektime")]
split<-split(datagraphw, datagraphw$weektime)
datagraphw1<-melt(split[1], id=c("interval", "weektime"), measure.vars="steps", na.rm=TRUE)
datagraphw2<-acast(datagraphw1, interval~variable, mean)
with(datagraphw2, plot(interval, steps, pch=1)
)
head(datagraphw2)
plot(datagraphw2,pch=1)
plot(datagraphw2,pch=1, xlab="weekday", ylab="Number of steps")
datagraphw3<-melt(split[2], id=c("interval", "weektime"), measure.vars="steps", na.rm=TRUE)
datagraphw4<-acast(datagraphw3, interval~variable, mean)
plot(datagraphw4,pch=1, xlab="weekday", ylab="Number of steps")
plot(datagraphw4,pch=1, xlab="weekend", ylab="Number of steps")
